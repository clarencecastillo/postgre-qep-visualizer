/* INIT */

CREATE DATABASE "dblpDB_quarter"
    ENCODING 'UTF8'
    LC_COLLATE = 'en_US.UTF-8'
    LC_CTYPE = 'en_US.UTF-8';

DROP TABLE IF EXISTS PUB_SCHOOL;
DROP TABLE IF EXISTS CITERSHIP;
DROP TABLE IF EXISTS EDITORSHIP;
DROP TABLE IF EXISTS AUTHORSHIP;

DROP TABLE IF EXISTS WWW;
DROP TABLE IF EXISTS THESIS;
DROP TABLE IF EXISTS INCOLLECTION;
DROP TABLE IF EXISTS BOOK;
DROP TABLE IF EXISTS INPROCEEDING;
DROP TABLE IF EXISTS PROCEEDING;
DROP TABLE IF EXISTS ARTICLE;

DROP TABLE IF EXISTS PUBMONTH;
DROP TABLE IF EXISTS PUBLICATION;

DROP TABLE IF EXISTS PERSON;
DROP TABLE IF EXISTS ALIAS;
DROP TABLE IF EXISTS SCHOOL;
DROP TABLE IF EXISTS PUBLISHER;

/* ========================================================================= */
/* ACTORS                                                                    */
/* ========================================================================= */
CREATE TABLE PUBLISHER(
publisherId				INT     			GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
publisherName			VARCHAR(300)	    NOT NULL);

CREATE TABLE SCHOOL(
schoolId				INT     			GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
schoolName			    VARCHAR(300)	    NOT NULL);

CREATE TABLE PERSON(
personKey				VARCHAR(200)		,
personFullName			VARCHAR(100)	    ,
personFirstName			VARCHAR(100)	    ,
personLastName			VARCHAR(100)	    ,

PRIMARY KEY (personKey));

CREATE TABLE ALIAS(
aliasId					INT     			GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
personFullName			VARCHAR(100)	    ,
aliasFirstName			VARCHAR(100)	    ,
aliasLastName			VARCHAR(100)		,
personKey				VARCHAR(200)     	NOT NULL);


/* ========================================================================= */
/* Publications                                                              */
/* ========================================================================= */
CREATE TABLE PUBLICATION(
pubKey				VARCHAR(150)     		,
pubTitle			VARCHAR(1000)	    	NOT NULL,
pubYear				SMALLINT    			,
pubMdate	    	DATE					,
pubType            	VARCHAR(50)				,
publisherName		VARCHAR(300)		    ,

PRIMARY KEY (pubKey));

CREATE TABLE PUBMONTH(
pubKey					VARCHAR(150)		,
pubMonth				VARCHAR(20)			,

PRIMARY KEY (pubKey,pubMonth));

/* Sub Classes */

CREATE TABLE ARTICLE(
pubKey				VARCHAR(150)     		,
articleJournal		VARCHAR(200)	    	,
articleBooktitle	VARCHAR(400)	    	,
articleNumber		VARCHAR(50)    			,
articlePages		VARCHAR(100)    		,
articleVolume		VARCHAR(100)	    	,
articleCrossref		VARCHAR(200)	    	,

PRIMARY KEY (pubKey));

CREATE TABLE PROCEEDING(
pubKey				VARCHAR(150)     		,
proceedAddress		VARCHAR(100)	    	,
proceedJournal		VARCHAR(200)	    	,
proceedBooktitle	VARCHAR(400)    		,
proceedNumber		VARCHAR(50)    			,
proceedPages		VARCHAR(100)	    	,
proceedSeries		VARCHAR(300)	    	,
proceedVolume		VARCHAR(100)	    	,
proceedType			VARCHAR(200)	    	,

PRIMARY KEY (pubKey));

CREATE TABLE INPROCEEDING(
pubKey				VARCHAR(150)			,
inproBooktitle		VARCHAR(400)    		,
inproNumber			VARCHAR(50)    			,
inproPages			VARCHAR(100)	    	,
inproCrossref		VARCHAR(200)	    	,

PRIMARY KEY (pubKey));

CREATE TABLE BOOK(
pubKey				VARCHAR(150)			,
bookBooktitle		VARCHAR(400)    		,
bookPages			VARCHAR(100)	    	,
bookSeries			VARCHAR(300)	    	,
bookVolume			VARCHAR(100)	    	,

PRIMARY KEY (pubKey));

CREATE TABLE INCOLLECTION(
pubKey				VARCHAR(150)			,
incolChapter		SMALLINT    			,
incolBooktitle		VARCHAR(400)    		,
incolNumber			VARCHAR(50)    			,
incolPages			VARCHAR(100)	    	,
incolCrossref		VARCHAR(200)	    	,

PRIMARY KEY (pubKey));

CREATE TABLE THESIS(
pubKey				VARCHAR(150)			,
thesisNumber		VARCHAR(50)    			,
thesisPages			VARCHAR(100)	    	,
thesisSeries		VARCHAR(300)	    	,
thesisVolume		VARCHAR(100)	    	,

PRIMARY KEY (pubKey));

CREATE TABLE WWW(
pubKey				VARCHAR(150)			,
wwwBooktitle		VARCHAR(400)    		,

PRIMARY KEY (pubKey));


CREATE TABLE AUTHORSHIP(
pubKey				VARCHAR(150)     		,
personFullName		VARCHAR(100)	 		,

PRIMARY KEY (pubKey,personFullName));

CREATE TABLE EDITORSHIP(
pubKey				VARCHAR(150)     		,
personFullName		VARCHAR(100)	 		,

PRIMARY KEY (pubKey,personFullName));

CREATE TABLE CITERSHIP(
citingPubKey		VARCHAR(150)     		,
citedPubKey			VARCHAR(150)	 		,

PRIMARY KEY (citingPubKey,citedPubKey));

CREATE TABLE PUB_SCHOOL(
schoolName			VARCHAR(300)     		,
pubKey				VARCHAR(150)	 		,

PRIMARY KEY (schoolName,pubKey));


/* ========================================================================= */
/* Import Data                                                               */
/* ========================================================================= */

COPY ALIAS(personFullName, personKey)
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/alias.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY ARTICLE
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/article.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY AUTHORSHIP
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/authorship.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY BOOK
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/book.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY CITERSHIP
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/citership.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY EDITORSHIP
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/editorship.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY INCOLLECTION
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/incollection.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY INPROCEEDING
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/inproceeding.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY PERSON(personKey, personFullName)
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/person.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY PROCEEDING
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/proceeding.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY PUB_SCHOOL
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/pub_school.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY PUBLICATION
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/publication.csv'
ENCODING 'LATIN1'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY PUBMONTH
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/pubmonth.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY THESIS
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/thesis.csv'
DELIMITER '|' NULL '\N' CSV HEADER;

COPY WWW
FROM '/Users/anqitu/Workspaces/NTU/CZ4031/CZ4031-Project2-Visual-Eexploration-Of-Query-Execution-Plans/csv_quarter/www.csv'
DELIMITER '|' NULL '\N' CSV HEADER;


/* ========================================================================= */
/* Alter Tables                                                              */
/* ========================================================================= */


CREATE TABLE TEMP_PERSON(
personKey			VARCHAR(150)     		,
personFullName		VARCHAR(100)	 		,

PRIMARY KEY (personKey,personFullName));

INSERT INTO TEMP_PERSON(personFullName, personKey)
SELECT personFullName, personKey FROM ALIAS
UNION
SELECT personFullName, personKey FROM PERSON;

CREATE INDEX idx_helper1 ON AUTHORSHIP(personFullName);
CREATE INDEX idx_helper2 ON EDITORSHIP(personFullName);
CREATE INDEX idx_helper3 ON TEMP_PERSON(personFullName);

CREATE TABLE TEMP_AUTHORSHIP AS
SELECT
*
FROM AUTHORSHIP
LEFT JOIN TEMP_PERSON
USING(personFullName);

DROP TABLE AUTHORSHIP;

CREATE INDEX idx_helper4 ON TEMP_AUTHORSHIP(pubKey);
CREATE INDEX idx_helper5 ON TEMP_AUTHORSHIP(personKey);

CREATE TABLE AUTHORSHIP(
pubKey				VARCHAR(150)     		,
personKey		   VARCHAR(200)	 		,

PRIMARY KEY (pubKey,personKey));

INSERT INTO AUTHORSHIP SELECT pubKey, personKey FROM TEMP_AUTHORSHIP  ON CONFLICT (pubkey, personKey) DO NOTHING;
DROP TABLE TEMP_AUTHORSHIP;

CREATE TABLE TEMP_EDITORSHIP AS
SELECT
*
FROM EDITORSHIP
LEFT JOIN TEMP_PERSON
USING(personFullName);

DROP TABLE EDITORSHIP;

CREATE TABLE EDITORSHIP(
pubKey				VARCHAR(150)     		,
personKey		   VARCHAR(200)	 		,

PRIMARY KEY (pubKey,personKey));

INSERT INTO EDITORSHIP SELECT pubKey, personKey FROM TEMP_EDITORSHIP  ON CONFLICT (pubkey, personKey) DO NOTHING;
DROP TABLE TEMP_EDITORSHIP;
DROP TABLE TEMP_PERSON;

UPDATE PERSON SET personFullName = SPLIT_PART(personFullName,' 0', 1) WHERE personFullName LIKE '%0%';
UPDATE PERSON SET personLastName = REVERSE(SPLIT_PART(REVERSE(personFullName),' ', 1))
WHERE STRPOS(personFullName, ' ') <> 0;
UPDATE PERSON SET personFirstName = SPLIT_PART(personFullName, personLastName, 1);
UPDATE PERSON SET personFirstName = SPLIT_PART(personFirstName, ' ', 1);
UPDATE PERSON SET personFirstName = personFullName WHERE personLastName IS NULL;

ALTER TABLE PERSON DROP personFullName;

UPDATE ALIAS SET personFullName = SPLIT_PART(personFullName,' 0', 1) WHERE personFullName LIKE '%0%';
UPDATE ALIAS SET aliasLastName = REVERSE(SPLIT_PART(REVERSE(personFullName),' ', 1))
WHERE STRPOS(personFullName, ' ') <> 0;
UPDATE ALIAS SET aliasFirstName = SPLIT_PART(personFullName, aliasLastName, 1);
UPDATE ALIAS SET aliasFirstName = SPLIT_PART(aliasFirstName, ' ', 1);
UPDATE ALIAS SET aliasFirstName = personFullName WHERE aliasLastName IS NULL;

ALTER TABLE ALIAS
DROP personFullName;

INSERT INTO SCHOOL (schoolName)
SELECT DISTINCT schoolName
FROM PUB_SCHOOL;

CREATE TABLE TEMP_PUB_SCHOOL AS
SELECT
*
FROM PUB_SCHOOL
LEFT JOIN SCHOOL
USING(schoolName);

DROP TABLE PUB_SCHOOL;
ALTER TABLE TEMP_PUB_SCHOOL RENAME TO PUB_SCHOOL;
ALTER TABLE PUB_SCHOOL
DROP schoolName,
ADD PRIMARY KEY(schoolId, pubKey);

INSERT INTO PUBLISHER (publisherName)
SELECT DISTINCT publisherName
FROM PUBLICATION
WHERE publisherName != '';

CREATE TABLE TEMP_PUBLICATION AS
SELECT
*
FROM PUBLICATION
LEFT JOIN PUBLISHER
USING(publisherName);

DROP TABLE PUBLICATION;
ALTER TABLE TEMP_PUBLICATION RENAME TO PUBLICATION;
ALTER TABLE PUBLICATION
DROP publisherName,
ADD PRIMARY KEY(pubKey);



/* ========================================================================= */
/* Set Constraints                                                           */
/* ========================================================================= */
ALTER TABLE ALIAS
ADD FOREIGN KEY (personKey) REFERENCES PERSON(personKey);

ALTER TABLE PUBLICATION
ADD FOREIGN KEY (publisherId) REFERENCES PUBLISHER(publisherId);

ALTER TABLE PUBMONTH
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey);

ALTER TABLE ARTICLE
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey),
ADD FOREIGN KEY (articleCrossref) REFERENCES PUBLICATION(pubKey);

ALTER TABLE PROCEEDING
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey);

ALTER TABLE INPROCEEDING
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey),
ADD FOREIGN KEY (inproCrossref) REFERENCES PUBLICATION(pubKey);

ALTER TABLE BOOK
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey);

ALTER TABLE INCOLLECTION
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey),
ADD FOREIGN KEY (incolCrossref) REFERENCES PUBLICATION(pubKey);

ALTER TABLE THESIS
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey);

ALTER TABLE WWW
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey);

ALTER TABLE PUB_SCHOOL
ADD FOREIGN KEY (schoolId) REFERENCES SCHOOL(schoolId),
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey);

ALTER TABLE EDITORSHIP
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey),
ADD FOREIGN KEY (personKey) REFERENCES PERSON(personKey);

ALTER TABLE AUTHORSHIP
ADD FOREIGN KEY (pubKey) REFERENCES PUBLICATION(pubKey),
ADD FOREIGN KEY (personKey) REFERENCES PERSON(personKey);

DELETE FROM CITERSHIP
WHERE citedPubKey = '...';
DELETE FROM CITERSHIP
WHERE citedPubKey = '';
DELETE FROM CITERSHIP
WHERE citedPubKey = 'persons/Ley93';

ALTER TABLE CITERSHIP
ADD FOREIGN KEY (citingPubKey) REFERENCES PUBLICATION(pubKey),
ADD FOREIGN KEY (citedPubKey) REFERENCES PUBLICATION(pubKey);
